Алгоритм поразрядной сортировки (radix sort)
============================================

История
-------
Данный алгоритм применялся при сортировке перфокарт.

Описание
--------
Сортировка производится в цикле (k проходов цикла, где k - количество разрядов) от младшего разряда до старшего. В теле цикла разряды сортируются устойчивым алгоритмом сортировки, например алгоритмом сортировки подсчетом.

Реализация алгоритма на языке Java
----------------------------------
::

	public void sort(int maxLastDigitIndex){
		LinkedList<Integer> q[] = new LinkedList[10];
		maxDigitIndex = maxLastDigitIndex;
		
		for (int i = 0; i < 10; i++){
			q[i] = new LinkedList<Integer>();
		}
		
		for (int k = 0; k <= maxDigitIndex; k++){
			for (int j = 0; j < arr.length; j++){
				String temp = String.valueOf(arr[j]);				
				int digit = Character.digit(temp.charAt(maxDigitIndex - k), 10); 
				
				q[digit].addLast(arr[j]);
			}
			int num = 0;
			for (int s = 0; s < q.length; s++){
				while (!(q[s].isEmpty())){
					arr[num] = q[s].pollFirst();
					++num;
				}
			}
		}
	}

В данной реализации используются очереди, для временного хранения элементов сортируемого массива. Каждый элемент сортируемого массива помещается в очередь с индексом, равным разряду числа. Затем элементы извлекаются из очередей и помещаются в сортируемый массив.

Пример: ::

	int test[] = {101, 129, 148, 599, 199, 244, 577};
	
	В очередь с индексом q[1] помещается элемент 101
	В очередь с индексом q[9] помещается элемент 129
	В очередь с индексом q[8] помещается элемент 148
	В очередь с индексом q[9] помещается элемент 599
	В очередь с индексом q[9] помещается элемент 199
	В очередь с индексом q[4] помещается элемент 244
	В очередь с индексом q[7] помещается элемент 577
	101 244 577 148 129 599 199 
	------------------------------
	В очередь с индексом q[0] помещается элемент 101
	В очередь с индексом q[4] помещается элемент 244
	В очередь с индексом q[7] помещается элемент 577
	В очередь с индексом q[4] помещается элемент 148
	В очередь с индексом q[2] помещается элемент 129
	В очередь с индексом q[9] помещается элемент 599
	В очередь с индексом q[9] помещается элемент 199
	101 129 244 148 577 599 199 
	------------------------------
	В очередь с индексом q[1] помещается элемент 101
	В очередь с индексом q[1] помещается элемент 129
	В очередь с индексом q[2] помещается элемент 244
	В очередь с индексом q[1] помещается элемент 148
	В очередь с индексом q[5] помещается элемент 577
	В очередь с индексом q[5] помещается элемент 599
	В очередь с индексом q[1] помещается элемент 199
	101 129 148 199 244 577 599 
	------------------------------
	101 129 148 199 244 577 599 
	

Анализ времени выполнения алгоритма
-----------------------------------

Алгоритм поразрядной сортировки позволяет выполнить корректную сортировку за время Thetta(d (n + k)), если устойчивая сортировка, используемая данным алгоритмом, имеет время работы Thetta(n + k). (d - количество разрядов числа, n - количество элементов массива, k - количество принимаемых значений числом, например для десятичных цифр - [0 - 9])
